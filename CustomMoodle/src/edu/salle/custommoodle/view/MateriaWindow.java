/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.salle.custommoodle.view;

import edu.salle.custommoodle.businesslogic.StudentBLO;
import edu.salle.custommoodle.businesslogic.MateriaBLO;
import edu.salle.custommoodle.businesslogic.SMBLO;

import edu.salle.custommoodle.model.Materia;
import edu.salle.custommoodle.model.SM;
import edu.salle.custommoodle.model.Student;
import java.awt.Component;
import java.awt.Graphics;
import java.text.Normalizer;
import java.util.ArrayList;
import java.util.List;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 * Universidad De La Salle Bajío
 * Ingenieria en Sistemas y Software Computacionales
 * Juan de Dios Guadalupe Cruz Delgado.
 * 67024
 * View Materias
 * @author JuandeDios
 */
public class MateriaWindow extends javax.swing.JFrame {

    /**
     * Creates new form MateriaWindow
     */
    
    private SMBLO SMBLO=new SMBLO();
    private StudentBLO studentBLO=new StudentBLO();
    private MateriaBLO materiaBLO=new MateriaBLO();
    public MateriaWindow() {
        initComponents();
        setLocationRelativeTo(null);
        materiaBLO.load();
        studentBLO.load();
        SMBLO.load();
        clearTable();
        refreshTable(materiaBLO.findAll());
        refreshMaterias();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSalir = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        tfNameMateria = new javax.swing.JTextField();
        bsave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        tfNameDocente = new javax.swing.JTextField();
        tfId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMat = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtInfoSearch = new javax.swing.JButton();
        bsearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStudents = new javax.swing.JTable();
        cmbMateria = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        btnBaja = new javax.swing.JButton();
        txtInfoSearch1 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblCurp = new javax.swing.JLabel();
        lblMateria = new javax.swing.JLabel();
        ll = new javax.swing.JLabel();
        lblCurp1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Materias");

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/17.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/52.png"))); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/9.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        bsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/70.png"))); // NOI18N
        bsave.setText("Save");
        bsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsaveActionPerformed(evt);
            }
        });

        jLabel3.setText("Id:");

        jLabel11.setText("Nombre(s) de la Materia:");

        jLabel12.setText("Nombre(s) del Docente:");

        tblMat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nombre Materia", "Docente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMat);

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/23.png"))); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        jLabel5.setText("Busqueda");

        txtInfoSearch.setBackground(new java.awt.Color(0, 191, 255));
        txtInfoSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/6.png"))); // NOI18N
        txtInfoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInfoSearchActionPerformed(evt);
            }
        });

        bsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/77.png"))); // NOI18N
        bsearch.setText("Search");
        bsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsearchActionPerformed(evt);
            }
        });

        tblStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Curp", "Name", " Apellido Paterno", "Apellido Materno", "Fecha de Nacimiento", "Sexo", "Estado", "Materia", "Docente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblStudents);

        cmbMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMateriaActionPerformed(evt);
            }
        });

        jLabel13.setText("Lista de Materia:");

        btnBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/32.png"))); // NOI18N
        btnBaja.setText("Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        txtInfoSearch1.setBackground(new java.awt.Color(0, 191, 255));
        txtInfoSearch1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/6.png"))); // NOI18N
        txtInfoSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInfoSearch1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Sección de Baja");

        ll.setText("Materia:");

        lblCurp1.setText("Curp:");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/salle/custommoodle/images/113.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tfNameMateria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                        .addComponent(tfNameDocente, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bsave, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtInfoSearch1))
                                    .addComponent(cmbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtInfoSearch)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblCurp1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ll, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblCurp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMateria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addComponent(btnBaja)
                                .addGap(154, 154, 154)
                                .addComponent(btnSalir)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bsave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnupdate)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNameMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfNameDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh))
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bsearch)
                    .addComponent(txtInfoSearch1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(txtInfoSearch)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCurp1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCurp, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ll, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBaja)
                            .addComponent(btnSalir))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       materiaBLO.commitChanges();
       SMBLO.commitChanges();
       studentBLO.commitChanges();
        this.dispose();
        StartView n =new StartView();
         n.setVisible(true);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        List<Materia> studentList = materiaBLO.findAll(); // se obtiene lista en el metodo de negocio
        int tam=studentList.size();
        if(tam==0)
        {
            JOptionPane.showMessageDialog(null, "No hay Materias que Actualizar\nIntente Ingresar Un Materia");
        }
        else
        {
            String id=tfId.getText();
            String nameMateria=tfNameMateria.getText();
            String namedoc=tfNameDocente.getText();
            if(!"".equals(id) &&!"".equals(nameMateria) &&!"".equals(namedoc) )
            {

                Materia mat=new Materia(id,nameMateria,namedoc);
                boolean var=materiaBLO.update(mat);

                if(var==true)
                {
                    tfNameMateria.setText("");
                    tfNameDocente.setText("");
                    tfId.setText("");
                    refreshTable(materiaBLO.findAll());
                    refreshMaterias();
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El Usuario No Existe");
//                    refreshTable(materiaBLO.findAll());
                }

            }
            else
            {
                JOptionPane.showMessageDialog(null, "Para Actualizar una Materia Es Necesario llenar los Campos\nId\nNombre de la Materia\nNombre del Docente");

            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        List<Materia> studentList = materiaBLO.findAll(); // se obtiene lista en el metodo de negocio
        int tam=studentList.size();
        if(tam==0)
        {
            JOptionPane.showMessageDialog(null, "No hay Materias que Borrar\nIntente Ingresar Una Materia");
        }
        else
        {
            String id=tfId.getText();
            String name=tfNameMateria.getText();
            String named=tfNameDocente.getText();
//            clearTable();
            if(!"".equals(name) &&!"".equals(named))
            {
                JOptionPane.showMessageDialog(null, "Para Realizar Un Delete Solo Es Necesario el Campo\nid");
                tfNameMateria.setText("");
                tfNameDocente.setText("");
//                refreshTable(materiaBLO.findAll());
            }
            else if(!"".equals(id))
            {
                Materia student=new Materia(id);
                boolean var=materiaBLO.delete(student);
                if(var==true)
                {
                    tfId.setText("");
                    refreshMaterias();
                    refreshTable(materiaBLO.findAll());
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El Usuario No Existe");
                    refreshTable(materiaBLO.findAll());
                }
                //
                //            tfName.setText(student.getName());
                //            tfLastName.setText(student.getLastName());
            }
            else{
                refreshTable(materiaBLO.findAll());
                JOptionPane.showMessageDialog(null, "Para Realizar Una Busqueda Es Necesario el Campo\nId");

            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void bsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsaveActionPerformed
        String id=tfId.getText();
        String nameM=tfNameMateria.getText();
        String named=tfNameDocente.getText();
        if(!"".equals(id))
        {
            JOptionPane.showMessageDialog(null, "Para Guardar un Materia No es Necesario el Campo\nId");
            tfId.setText("");
        }
        else if(!"".equals(nameM) && !"".equals(named))
        {
                Materia mat=new Materia(id,nameM,named);
              materiaBLO.save(mat);
            tfNameMateria.setText("");
            tfNameDocente.setText("");
            tfId.setText("");
            refreshTable(materiaBLO.findAll());
            refreshMaterias();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Para Guardar una Materia Es Necesario llenar los Campos\nNombre de la Materia\nNombre del Docente");

        }
    }//GEN-LAST:event_bsaveActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        List<Materia> studentList = materiaBLO.findAll(); // se obtiene lista en el metodo de negocio
        int tam=studentList.size();
        if(tam==0)
        {
            JOptionPane.showMessageDialog(null, "No hay Materia\nIntente Ingresar Una Materia");
        }
        else
        {
            refreshTable(materiaBLO.findAll());
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtInfoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInfoSearchActionPerformed
        JOptionPane.showMessageDialog(null, "Para Realizar una Baja Seleccione un Estudiante en la Tabla(Click)");

    }//GEN-LAST:event_txtInfoSearchActionPerformed

    private void bsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsearchActionPerformed
        // TODO add your handling code here:
        List<Student> studentList = studentBLO.findAll(); // se obtiene lista en el metodo de negocio
        int tam=studentList.size();
        if(tam==0)
        {
            JOptionPane.showMessageDialog(null, "No hay Estudiantes que Buscar\nIntente Ingresar Un Estudiante");
        }
        else
        {
            String id=tfId.getText();
            String name=tfNameMateria.getText();
            String named=tfNameDocente.getText();
            String busq=this.cmbMateria.getSelectedItem().toString();
            clearTableStudents();
            if(!"".equals(id) &&!"".equals(name) && !"".equals(named))
            {
                JOptionPane.showMessageDialog(null, "Para Realizar Una Busqueda Solo Es Necesario el Campo\nPalabra");
                 tfNameMateria.setText("");
                tfNameDocente.setText("");
            }
            else if(!"".equals(busq))
            {
                List<SM> studentList1=SMBLO.findStudentsMat(busq);
                //            Student student =studentBLO.find(id);
                if(!studentList1.isEmpty())
                {
                    clearTableStudents();
                    refreshTableSearch(studentList1);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"La Materia de "+busq +" no cuenta con Alumnos");
                    lblCurp.setText("");
           lblMateria.setText("");
                    refreshTable(materiaBLO.findAll());
                }
            }
            else{
                refreshTable(materiaBLO.findAll());
                JOptionPane.showMessageDialog(null, "Para Realizar Una Busqueda Es Necesario el Campo\nPalabra");

            }
        }
    }//GEN-LAST:event_bsearchActionPerformed

    private void cmbMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMateriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMateriaActionPerformed

    private void tblStudentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentsMouseClicked
        // TODO add your handling code here:
//        int n=tblStudents.;
        int s=tblStudents.getSelectedRow();
        
         DefaultTableModel dtm = (DefaultTableModel) tblStudents.getModel();
        if(s!=-1)
        {
           String Curp= dtm.getValueAt(s, 0).toString();
           String Materia=dtm.getValueAt(s, 7).toString();
           lblCurp.setText("");
           lblCurp.setText(Curp);
           lblMateria.setText("");
           lblMateria.setText(Materia);
        }
        
       
    }//GEN-LAST:event_tblStudentsMouseClicked

    private void txtInfoSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInfoSearch1ActionPerformed
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(null, "Para Realizar una Busqueda Seleccione una Materia de la Lista");

    }//GEN-LAST:event_txtInfoSearch1ActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        // TODO add your handling code here:
            String curp=lblCurp.getText();
            String name=lblMateria.getText();
             String id=tfId.getText();
            String namem=tfNameMateria.getText();
            String named=tfNameDocente.getText();
            if(!"".equals(namem) &&!"".equals(named) &&!"".equals(id))
            {
                JOptionPane.showMessageDialog(null, "Para Realizar Una Baja Solo Es Necesario el Campo\nid");
                tfNameMateria.setText("");
                tfNameDocente.setText("");
                tfId.setText("");
            }
            else if(!"".equals(curp)&& !"".equals(name))
            {
                String idm=materiaBLO.findId(name);
                SM student=new SM(curp,idm);
                boolean var=SMBLO.Baja(student);
                if(var==true)
                {
                   lblCurp.setText("");
            lblMateria.setText("");
                    refreshMaterias();
                    refreshTable(materiaBLO.findAll());
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "El Usuario No Existe");
                    refreshTable(materiaBLO.findAll());
                }
                //
                //            tfName.setText(student.getName());
                //            tfLastName.setText(student.getLastName());
            }
            else
            {
            JOptionPane.showMessageDialog(null, "Para Realizar Una Baja Es Necesario que Realize una Busqueda y seleccione un Alumno");
            }
    }//GEN-LAST:event_btnBajaActionPerformed

    private void tblMatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMatMouseClicked
        int s=tblMat.getSelectedRow();
        
         DefaultTableModel dtm = (DefaultTableModel) tblMat.getModel();
        if(s!=-1)
        {
           String Id= dtm.getValueAt(s, 0).toString();
           String Materia=dtm.getValueAt(s, 1).toString();
           String Docente=dtm.getValueAt(s, 2).toString();
           tfId.setText("");
           tfNameMateria.setText("");
            tfNameDocente.setText("");
            tfId.setText(Id);
           tfNameMateria.setText(Materia);
            tfNameDocente.setText(Docente);
        }
    }//GEN-LAST:event_tblMatMouseClicked
private void refreshTable(List<Materia> studentList)
    {
        clearTable();
        MateriaBLO N=new MateriaBLO();
        List<Materia>  n= N.findAll(); // se obtiene lista en el metodo de negocio
        DefaultTableModel dtm = (DefaultTableModel) tblMat.getModel(); //tabala de negocio
        Object[] emptyRow = {""}; //renglon bacio a las propiedades
        for(int i = 0; i<studentList.size(); i++){ //recorrer la lista de los estudiantes
            dtm.addRow(emptyRow);// se agrega renglon vacio y se agrega a la tabla
            dtm.setValueAt(studentList.get(i).getId(), i, 0); // la i es la posicion    el tercero es la coluna
            dtm.setValueAt(studentList.get(i).getName(), i, 1);
            dtm.setValueAt(studentList.get(i).getDocente(), i, 2);
        }
    }
private void refreshTableSearch(List<SM> SM)
    {
        clearTableStudents();
       StudentBLO N=new StudentBLO();
       MateriaBLO n=new MateriaBLO();
//        List<Materia>  n= N.findAll(); // se obtiene lista en el metodo de negocio
        DefaultTableModel dtm = (DefaultTableModel) tblStudents.getModel(); //tabala de negocio
        Object[] emptyRow = {""}; //renglon bacio a las propiedades
        for(int i = 0; i<SM.size(); i++){ //recorrer la lista de los estudiantes
            dtm.addRow(emptyRow);// se agrega renglon vacio y se agrega a la tabla
            dtm.setValueAt(SM.get(i).getCurp(), i, 0); // la i es la posicion    el tercero es la coluna
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getName(), i, 1);
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getApellidoP(), i, 2);
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getApellidoM(), i, 3);
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getFechaNacimiento(), i, 4);
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getSexo(), i, 5);
            dtm.setValueAt(N.find(SM.get(i).getCurp()).getEstado(), i, 6);
            dtm.setValueAt(n.findName(SM.get(i).getIdMateria()), i, 7);
            dtm.setValueAt(n.findNameDocente(SM.get(i).getIdMateria()), i, 8);
//
//            dtm.setValueAt(N.findName(studentList.get(i).getIdMateria()), i, 7);
//            dtm.setValueAt(N.findNameDocente(studentList.get(i).getIdMateria()), i, 8);
        }
    }
private void clearTable(){
       DefaultTableModel dtm = (DefaultTableModel) tblMat.getModel();
       while(dtm.getRowCount()>0){
           dtm.removeRow(0);
       }
   }
private void clearTableStudents(){
       DefaultTableModel dtm = (DefaultTableModel) tblStudents.getModel();
       while(dtm.getRowCount()>0){
           dtm.removeRow(0);
       }
   }
private void refreshMaterias()
     { 
         cmbMateria.removeAllItems();
         cmbMateria.addItem("");
        List<Materia>  n= materiaBLO.findAll();
        for(int i = 0; i < n.size(); i++) {
              cmbMateria.addItem((n.get(i).getName()));
     }
      }
    /**
     * @param args the command line arguments
     */


//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MateriaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MateriaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MateriaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MateriaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MateriaWindow().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bsave;
    private javax.swing.JButton bsearch;
    private javax.swing.JButton btnBaja;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnupdate;
    private javax.swing.JComboBox<String> cmbMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCurp;
    private javax.swing.JLabel lblCurp1;
    private javax.swing.JLabel lblMateria;
    private javax.swing.JLabel ll;
    private javax.swing.JTable tblMat;
    private javax.swing.JTable tblStudents;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfNameDocente;
    private javax.swing.JTextField tfNameMateria;
    private javax.swing.JButton txtInfoSearch;
    private javax.swing.JButton txtInfoSearch1;
    // End of variables declaration//GEN-END:variables
}
